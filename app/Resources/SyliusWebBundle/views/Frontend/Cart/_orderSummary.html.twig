{% set taxAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::TAX_ADJUSTMENT') %}
{% set shippingAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::SHIPPING_ADJUSTMENT') %}
{% set orderPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT') %}
{% set orderItemPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_ITEM_PROMOTION_ADJUSTMENT') %}

<div class="box" id="order-summary">
    <div class="box-header">
        <h3>Order summary</h3>
    </div>
    <p class="text-muted">Shipping and additional costs are calculated based on the values you have entered.</p>
    <div class="table-responsive">
        <table class="table">
            <tbody>
            <tr>
                <td>Order subtotal</td>
                {% set orderSubtotal = order.itemsTotal - order.getAdjustmentsTotalRecursively(taxAdjustment) - order.getAdjustmentsTotalRecursively(orderItemPromotionAdjustment) %}
                <th colspan="2">{{ (orderSubtotal)|sylius_price }}</th>
            </tr>
            <tr>
                <td>Shipping</td>
                {% set shippingTotal = order.adjustmentsTotal(taxAdjustment) + order.adjustmentsTotal(shippingAdjustment) %}
                <th>{{ shippingTotal|sylius_price }}</th>
            </tr>
            <tr>
                <td>Tax</td>
                <th>{{ order.getAdjustmentsTotalRecursively(taxAdjustment)|sylius_price }}</th>
            </tr>
            <tr>
                <td>Discount</td>
                {% set discountAmount = order.adjustmentsTotalRecursively(orderItemPromotionAdjustment) + order.adjustmentsTotalRecursively(orderPromotionAdjustment) %}
                <th>{{ (-1 * discountAmount)|sylius_price }}</th>
            </tr>
            <tr class="total">
                <td>Grand total</td>
                <th>{{ order.total|sylius_price }}</th>
            </tr>
            </tbody>
        </table>
    </div>
</div>
